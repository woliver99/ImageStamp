name: Build and Release Image Stamper

# Trigger the workflow on push events to the main branch
on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Python 3.10
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Build Executable with PyInstaller Action
      - name: Build Executable
        id: pyinstaller
        uses: Martin005/pyinstaller-action@v1.2.0
        with:
          spec: 'main.py' # Path to your main script or .spec file
          requirements: 'requirements.txt' # Path to your requirements.txt
          options: '--onefile,--name "ImageStamper",--windowed' # PyInstaller options
          python_ver: '3.10'
          # Do NOT set upload_exe_with_name to avoid uploading as artifact

      # Step 5: Create Git Tag
      - name: Create Git Tag
        id: create_tag
        shell: bash
        run: |
          # Generate a tag name using the short commit SHA
          TAG_NAME="build-${GITHUB_SHA::7}"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: List dist Directory Contents
        run: |
          dir ./dist

      # Step 6: Create GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: "Build ${{ env.TAG_NAME }}"
          draft: false
          prerelease: false

      # Step 7: Upload Executable to Release
      - name: Upload Executable to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/ImageStamper.exe
          asset_name: ImageStamper.exe
          asset_content_type: application/octet-stream
