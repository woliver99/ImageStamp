name: Build and Release Image Stamper

# Trigger the workflow on push events to the main branch
on:
    push:
        branches:
            - main

jobs:
    build-windows:
        name: Build Windows Executable
        runs-on: windows-latest

        steps:
            # Step 1: Checkout the repository
            - name: Checkout Repository
              uses: actions/checkout@v3

            # Step 2: Set up Python 3.10
            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            # Step 3: Install dependencies
            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            # Step 4: Build Executable with PyInstaller
            - name: Build Executable
              run: |
                  pyinstaller --onefile --windowed --icon=icon.icns --name "ImageStamper" main.py

            # Step 5: Upload Windows Executable as Artifact
            - name: Upload Windows Executable
              uses: actions/upload-artifact@v3
              with:
                  name: ImageStamper-windows
                  path: ./dist/ImageStamper.exe

    build-macos:
        name: Build macOS Executable
        runs-on: macos-latest

        steps:
            # Step 1: Checkout the repository
            - name: Checkout Repository
              uses: actions/checkout@v3

            # Step 2: Set up Python 3.10
            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            # Step 3: Install dependencies
            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            # Step 4: Build Executable with PyInstaller
            - name: Build Executable
              run: |
                  pyinstaller --onefile --windowed --icon=icon.icns --name "ImageStamper" main.py

            # Step 5: Upload macOS Executable as Artifact
            - name: Upload macOS Executable
              uses: actions/upload-artifact@v3
              with:
                  name: ImageStamper-macos
                  path: ./dist/ImageStamper # PyInstaller creates an executable without extension on macOS

    release:
        name: Create GitHub Release
        needs: [build-windows, build-macos]
        runs-on: ubuntu-latest

        steps:
            # Step 1: Download Windows Executable Artifact
            - name: Download Windows Executable
              uses: actions/download-artifact@v3
              with:
                  name: ImageStamper-windows
                  path: ./windows

            # Step 2: Download macOS Executable Artifact
            - name: Download macOS Executable
              uses: actions/download-artifact@v3
              with:
                  name: ImageStamper-macos
                  path: ./macos

            # Step 3: Create Git Tag
            - name: Create Git Tag
              id: create_tag
              shell: bash
              run: |
                  # Generate a tag name using the short commit SHA
                  TAG_NAME="build-${GITHUB_SHA::7}"
                  echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

            # Step 4: Create GitHub Release
            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ env.TAG_NAME }}
                  release_name: "Build ${{ env.TAG_NAME }}"
                  draft: false
                  prerelease: false

            # Step 5: Upload Windows Executable to Release
            - name: Upload Windows Executable to Release
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./windows/ImageStamper.exe
                  asset_name: ImageStamper-windows.exe
                  asset_content_type: application/octet-stream

            # Step 6: Upload macOS Executable to Release
            - name: Upload macOS Executable to Release
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./macos/ImageStamper
                  asset_name: ImageStamper-macos
                  asset_content_type: application/octet-stream
